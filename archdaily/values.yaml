webapp_defaults: &webapp_defaults
  resources:
    limits:
      cpu: 0.8
      memory: 512Mi
    requests:
      cpu: 0.7
      memory: 256Mi

sidekiq_defaults: &sidekiq_defaults
  resources:
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi

rails_env:
  # EXAMPLE_HOST: &EXAMPLE_HOST example.com

image:
  repository: XXXXXXXXXXXX.dkr.ecr.us-east-1.amazonaws.com/organization/example
  tag: '1.0'
  env: production
  branch: master

deployment:
  enabled: true

  workingDir: /home/app/webapp # Passenger Docker defaults
  imagePullPolicy: Always

  # HPA basic
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 65
  targetMemUtilizationPercentage: 80

  # Pod Disruption Budget
  pdb:
    enabled: true
    maxUnavailable: 1

  containers:
  - name: webapp
    ports:
    - containerPort: 80
      protocol: TCP
    healthcheck:
      readinessProbe:
        path: /path/to/readiness
        timeoutSeconds: 5
      livenessProbe:
        path: /path/to/liveness
        timeoutSeconds: 10
    <<: *webapp_defaults

service:
  enabled: true
  type: NodePort

  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP

external_services: &external_services
  # - path: /example
  #   serviceName: example
  #   servicePort: 80
  #   externalName: *EXAMPLE_HOST

tgb:
  enabled: false
  target_group_arn: aws_target_group_arn

ingress:
  enabled: true

  annotations:
  # - nginx.ingress.kubernetes.io/proxy-body-size: 100m
  # - kubernetes.io/ingress.class: nginx
  # - kubernetes.io/tls-acme: 'true'
  #
  # ALB Ingress Controller
  # - kubernetes.io/ingress.class: alb
  # - alb.ingress.kubernetes.io/scheme: internet-facing

  hosts:
    - example.com

  paths:
    proxy_pass:
      *external_services
    default:
      - path: / # For alb-ingress, change "/" to "/*"
        serviceName: ssl-redirect
        servicePort: use-annotation     

      - path: / # For alb-ingress, change "/" to "/*"
        serviceName: example
        servicePort: 80

cron:
  enabled: true
  resources: *sidekiq_defaults

  jobs:
    -
      name: cronjob-name
      activeDeadlineSeconds: 300
      schedule: '* * * * *'  #cron schedule expression
      command: ['command']

background:
  enabled: true
  resources: *sidekiq_defaults

  jobs:
    - name: sidekiq
      command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']
      graceful_exit: ["bundle", "exec", "sidekiqctl", "stop", "tmp/pids/sidekiq.pid", "30"] # SIGTERM triggers a quick exit; gracefully terminate instead

rake_jobs:
  enabled: true
  jobs:
    - name: emails-prefix
      command: ['bundle', 'exec', 'rake', 'namespace:task']